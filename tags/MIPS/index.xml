<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MIPS on Some Notes</title>
    <link>https://axcuan.github.io/tags/MIPS/</link>
    <description>Recent content in MIPS on Some Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 15 Dec 2019 13:22:14 +0800</lastBuildDate>
    
	<atom:link href="https://axcuan.github.io/tags/MIPS/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GCC和GDB</title>
      <link>https://axcuan.github.io/posts/GCC%E5%92%8CGDB/</link>
      <pubDate>Sun, 15 Dec 2019 13:22:14 +0800</pubDate>
      
      <guid>https://axcuan.github.io/posts/GCC%E5%92%8CGDB/</guid>
      <description>GCC GCC提供了大量的编译选项，大约有100个，其中最基本，最常用的参数如下： |选项|说明| -|-|- -o | 使用指定的文件名保存编译后的二进制文件 -O | 对程序进行优</description>
    </item>
    
    <item>
      <title>环境安装</title>
      <link>https://axcuan.github.io/posts/%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sun, 15 Dec 2019 13:21:50 +0800</pubDate>
      
      <guid>https://axcuan.github.io/posts/%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</guid>
      <description>安装pwntools 安装依赖 git clone https://github.com/aquynh/capstone cd capstone make make install 安装pwntools(需要联网，简易使用国内源) sudo apt-get install python-dev libffi-dev openssl-devel -y git clone https://github.com/Gallopsled/pwntools cd pwntools sudo python setup.py install 安装gdb输入插件 git clone https://github.com/Ovi3/pstdio.git ~/pstdio</description>
    </item>
    
    <item>
      <title>IOT安全资料整合</title>
      <link>https://axcuan.github.io/posts/IOT%E5%AE%89%E5%85%A8%E8%B5%84%E6%96%99%E6%95%B4%E5%90%88/</link>
      <pubDate>Sun, 15 Dec 2019 13:21:18 +0800</pubDate>
      
      <guid>https://axcuan.github.io/posts/IOT%E5%AE%89%E5%85%A8%E8%B5%84%E6%96%99%E6%95%B4%E5%90%88/</guid>
      <description>OT安全资料整合 十一月 07, 2019 build [](#IOT-安全资料整合（主要是路由器） &amp;ldquo;IOT 安全资料整合（主要是路由器）&amp;rdquo;)IOT 安全资料整合（主要是路由器</description>
    </item>
    
    <item>
      <title>MIPS32架构堆栈</title>
      <link>https://axcuan.github.io/posts/MIPS32%E6%9E%B6%E6%9E%84%E5%A0%86%E6%A0%88/</link>
      <pubDate>Sun, 15 Dec 2019 13:20:51 +0800</pubDate>
      
      <guid>https://axcuan.github.io/posts/MIPS32%E6%9E%B6%E6%9E%84%E5%A0%86%E6%A0%88/</guid>
      <description>MIPS堆栈原理 在计算机科学中，栈是一种具有 先进后出(FILO) 队列特性的数据结构。调用栈(Call Stack) 是指存放某个程序正在运行的函数的信息的栈。调用栈</description>
    </item>
    
    <item>
      <title>MIPS指令集</title>
      <link>https://axcuan.github.io/posts/MIPS%E6%8C%87%E4%BB%A4%E9%9B%86/</link>
      <pubDate>Sun, 15 Dec 2019 13:20:02 +0800</pubDate>
      
      <guid>https://axcuan.github.io/posts/MIPS%E6%8C%87%E4%BB%A4%E9%9B%86/</guid>
      <description>MIPS汇编语言基础 MIPS指令特点 MIPS 固定4字节指令长度 内存中的数据访问 (load/store) 必须严格对齐（至少4字节对齐） 跳转指令只有 26 位目标地址，加上 2 位对齐位，可寻</description>
    </item>
    
    <item>
      <title>MIPS汇编语言基础</title>
      <link>https://axcuan.github.io/posts/MIPS%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sat, 14 Dec 2019 22:23:23 +0800</pubDate>
      
      <guid>https://axcuan.github.io/posts/MIPS%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/</guid>
      <description>寄存器 ​ RISC的一个显著特点就是大量使用寄存器。因为寄存器的存取可以在一个时钟周期内完成，同时简化寻址方式，所以MIPS32的指令中除了加载/储存指</description>
    </item>
    
  </channel>
</rss>